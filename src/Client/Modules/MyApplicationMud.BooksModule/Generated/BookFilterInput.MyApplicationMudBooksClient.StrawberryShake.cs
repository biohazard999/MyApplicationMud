// <auto-generated/>
#nullable enable

namespace MyApplicationMud.GraphQL
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.11.1.0")]
    public partial class BookFilterInput : global::MyApplicationMud.GraphQL.State.IBookFilterInputInfo, global::System.IEquatable<BookFilterInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((BookFilterInput)obj);
        }

        public virtual global::System.Boolean Equals(BookFilterInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(And, other.And)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Or, other.Or) && ((Id is null && other.Id is null) || Id != null && Id.Equals(other.Id)) && ((Title is null && other.Title is null) || Title != null && Title.Equals(other.Title)) && ((Image is null && other.Image is null) || Image != null && Image.Equals(other.Image)) && ((Author is null && other.Author is null) || Author != null && Author.Equals(other.Author));
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (And != null)
                {
                    foreach (var And_elm in And)
                    {
                        hash ^= 397 * And_elm.GetHashCode();
                    }
                }

                if (Or != null)
                {
                    foreach (var Or_elm in Or)
                    {
                        hash ^= 397 * Or_elm.GetHashCode();
                    }
                }

                if (Id != null)
                {
                    hash ^= 397 * Id.GetHashCode();
                }

                if (Title != null)
                {
                    hash ^= 397 * Title.GetHashCode();
                }

                if (Image != null)
                {
                    hash ^= 397 * Image.GetHashCode();
                }

                if (Author != null)
                {
                    hash ^= 397 * Author.GetHashCode();
                }

                return hash;
            }
        }

        private global::System.Collections.Generic.IReadOnlyList<global::MyApplicationMud.GraphQL.BookFilterInput>? _value_and;
        private global::System.Boolean _set_and;
        private global::System.Collections.Generic.IReadOnlyList<global::MyApplicationMud.GraphQL.BookFilterInput>? _value_or;
        private global::System.Boolean _set_or;
        private global::MyApplicationMud.GraphQL.ComparableInt32OperationFilterInput? _value_id;
        private global::System.Boolean _set_id;
        private global::MyApplicationMud.GraphQL.StringOperationFilterInput? _value_title;
        private global::System.Boolean _set_title;
        private global::MyApplicationMud.GraphQL.StringOperationFilterInput? _value_image;
        private global::System.Boolean _set_image;
        private global::MyApplicationMud.GraphQL.AuthorFilterInput? _value_author;
        private global::System.Boolean _set_author;
        public global::System.Collections.Generic.IReadOnlyList<global::MyApplicationMud.GraphQL.BookFilterInput>? And
        {
            get => _value_and;
            set
            {
                _set_and = true;
                _value_and = value;
            }
        }

        global::System.Boolean global::MyApplicationMud.GraphQL.State.IBookFilterInputInfo.IsAndSet => _set_and;
        public global::System.Collections.Generic.IReadOnlyList<global::MyApplicationMud.GraphQL.BookFilterInput>? Or
        {
            get => _value_or;
            set
            {
                _set_or = true;
                _value_or = value;
            }
        }

        global::System.Boolean global::MyApplicationMud.GraphQL.State.IBookFilterInputInfo.IsOrSet => _set_or;
        public global::MyApplicationMud.GraphQL.ComparableInt32OperationFilterInput? Id
        {
            get => _value_id;
            set
            {
                _set_id = true;
                _value_id = value;
            }
        }

        global::System.Boolean global::MyApplicationMud.GraphQL.State.IBookFilterInputInfo.IsIdSet => _set_id;
        public global::MyApplicationMud.GraphQL.StringOperationFilterInput? Title
        {
            get => _value_title;
            set
            {
                _set_title = true;
                _value_title = value;
            }
        }

        global::System.Boolean global::MyApplicationMud.GraphQL.State.IBookFilterInputInfo.IsTitleSet => _set_title;
        public global::MyApplicationMud.GraphQL.StringOperationFilterInput? Image
        {
            get => _value_image;
            set
            {
                _set_image = true;
                _value_image = value;
            }
        }

        global::System.Boolean global::MyApplicationMud.GraphQL.State.IBookFilterInputInfo.IsImageSet => _set_image;
        public global::MyApplicationMud.GraphQL.AuthorFilterInput? Author
        {
            get => _value_author;
            set
            {
                _set_author = true;
                _value_author = value;
            }
        }

        global::System.Boolean global::MyApplicationMud.GraphQL.State.IBookFilterInputInfo.IsAuthorSet => _set_author;
    }
}
