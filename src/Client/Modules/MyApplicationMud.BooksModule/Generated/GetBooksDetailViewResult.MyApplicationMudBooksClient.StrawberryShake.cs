// <auto-generated/>
#nullable enable

namespace MyApplicationMud.BooksModule.GraphQL
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.11.1.0")]
    public partial class GetBooksDetailViewResult : global::System.IEquatable<GetBooksDetailViewResult>, IGetBooksDetailViewResult
    {
        public GetBooksDetailViewResult(global::MyApplicationMud.BooksModule.GraphQL.IGetBooksDetailView_Details details, global::System.Collections.Generic.IReadOnlyList<global::MyApplicationMud.BooksModule.GraphQL.IGetBooksDetailView_Authors> authors)
        {
            Details = details;
            Authors = authors;
        }

        public global::MyApplicationMud.BooksModule.GraphQL.IGetBooksDetailView_Details Details { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::MyApplicationMud.BooksModule.GraphQL.IGetBooksDetailView_Authors> Authors { get; }

        public virtual global::System.Boolean Equals(GetBooksDetailViewResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Details.Equals(other.Details)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Authors, other.Authors);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetBooksDetailViewResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Details.GetHashCode();
                foreach (var Authors_elm in Authors)
                {
                    hash ^= 397 * Authors_elm.GetHashCode();
                }

                return hash;
            }
        }
    }
}
