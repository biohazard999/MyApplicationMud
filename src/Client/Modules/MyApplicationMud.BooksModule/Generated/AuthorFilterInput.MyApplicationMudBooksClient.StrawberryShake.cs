// <auto-generated/>
#nullable enable

namespace MyApplicationMud.BooksModule.GraphQL
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.11.1.0")]
    public partial class AuthorFilterInput : global::MyApplicationMud.BooksModule.GraphQL.State.IAuthorFilterInputInfo, global::System.IEquatable<AuthorFilterInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((AuthorFilterInput)obj);
        }

        public virtual global::System.Boolean Equals(AuthorFilterInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(And, other.And)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Or, other.Or) && ((Id is null && other.Id is null) || Id != null && Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name));
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (And != null)
                {
                    foreach (var And_elm in And)
                    {
                        hash ^= 397 * And_elm.GetHashCode();
                    }
                }

                if (Or != null)
                {
                    foreach (var Or_elm in Or)
                    {
                        hash ^= 397 * Or_elm.GetHashCode();
                    }
                }

                if (Id != null)
                {
                    hash ^= 397 * Id.GetHashCode();
                }

                if (Name != null)
                {
                    hash ^= 397 * Name.GetHashCode();
                }

                return hash;
            }
        }

        private global::System.Collections.Generic.IReadOnlyList<global::MyApplicationMud.BooksModule.GraphQL.AuthorFilterInput>? _value_and;
        private global::System.Boolean _set_and;
        private global::System.Collections.Generic.IReadOnlyList<global::MyApplicationMud.BooksModule.GraphQL.AuthorFilterInput>? _value_or;
        private global::System.Boolean _set_or;
        private global::MyApplicationMud.BooksModule.GraphQL.ComparableInt32OperationFilterInput? _value_id;
        private global::System.Boolean _set_id;
        private global::MyApplicationMud.BooksModule.GraphQL.StringOperationFilterInput? _value_name;
        private global::System.Boolean _set_name;
        public global::System.Collections.Generic.IReadOnlyList<global::MyApplicationMud.BooksModule.GraphQL.AuthorFilterInput>? And
        {
            get => _value_and;
            set
            {
                _set_and = true;
                _value_and = value;
            }
        }

        global::System.Boolean global::MyApplicationMud.BooksModule.GraphQL.State.IAuthorFilterInputInfo.IsAndSet => _set_and;
        public global::System.Collections.Generic.IReadOnlyList<global::MyApplicationMud.BooksModule.GraphQL.AuthorFilterInput>? Or
        {
            get => _value_or;
            set
            {
                _set_or = true;
                _value_or = value;
            }
        }

        global::System.Boolean global::MyApplicationMud.BooksModule.GraphQL.State.IAuthorFilterInputInfo.IsOrSet => _set_or;
        public global::MyApplicationMud.BooksModule.GraphQL.ComparableInt32OperationFilterInput? Id
        {
            get => _value_id;
            set
            {
                _set_id = true;
                _value_id = value;
            }
        }

        global::System.Boolean global::MyApplicationMud.BooksModule.GraphQL.State.IAuthorFilterInputInfo.IsIdSet => _set_id;
        public global::MyApplicationMud.BooksModule.GraphQL.StringOperationFilterInput? Name
        {
            get => _value_name;
            set
            {
                _set_name = true;
                _value_name = value;
            }
        }

        global::System.Boolean global::MyApplicationMud.BooksModule.GraphQL.State.IAuthorFilterInputInfo.IsNameSet => _set_name;
    }
}
