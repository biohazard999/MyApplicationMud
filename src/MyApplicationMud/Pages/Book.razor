@page "/book/{Id:int}"
@inject MyApplicationMudClient Client

<MudContainer MaxWidth="MaxWidth.Medium" Class="my-16">
    @if (Input == null || Details == null)
    {
        <MudCard Outlined="true">
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="100px" />
            <MudCardContent>
                <MudSkeleton Width="30%" Height="42px;" />
                <MudSkeleton Width="80%" />
                <MudSkeleton Width="100%" />
            </MudCardContent>
            <MudCardActions>
                <MudSkeleton Width="64px" Height="40px" Class="ml-2" />
                <MudSkeleton Width="105px" Height="40px" Class="ml-3" />
            </MudCardActions>
        </MudCard>
    }
    else
    {
        <MudCard Outlined="true">
            <MudCardHeader>
                <MudText>@Input.Title</MudText>
            </MudCardHeader>
            <MudCardMedia Image="@Details.Details.Image" />
            <MudCardContent>
                <MudForm Model="@Input" @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                    <MudTextField @bind-Value="Input.Title" Label="Title" Required="true" RequiredError="Title is required!" />
                    <MudSelect @bind-Value="Input.AuthorId" Label="Author" AnchorOrigin="Origin.BottomCenter" RequiredError="Author is required">
                        @foreach (var author in Details.Authors)
                        {
                        <MudSelectItem Value="@author.Id">@author.Name</MudSelectItem>
                        }
                </MudSelect>
            </MudForm>
        </MudCardContent>
    </MudCard>
    }
</MudContainer>
@code {

    bool success;
    string[] errors = { };
    MudForm? form;

    [Parameter]
    public int Id { get; set; }

    public IGetBooksDetailViewResult? Details { get; set; }

    public EditBookInput? Input { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        Details = (await Client.GetBooksDetailView.ExecuteAsync(Id)).Data!;
        Input = new()
        {
            AuthorId = Details.Details.Author.Id,
            Title = Details.Details.Title
        };

        //Client.UpdateBook.ExecuteAsync()

    }
}
