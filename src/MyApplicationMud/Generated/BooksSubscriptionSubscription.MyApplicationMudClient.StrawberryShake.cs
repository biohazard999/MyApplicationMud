// <auto-generated/>
#nullable enable

namespace MyApplicationMud.GraphQL
{
    /// <summary>
    /// Represents the operation service of the BooksSubscription GraphQL operation
    /// <code>
    /// subscription BooksSubscription {
    ///   changed: bookChanged {
    ///     __typename
    ///     ... BookListInfo
    ///     ... on Book {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment BookListInfo on Book {
    ///   id
    ///   title
    ///   image
    ///   author {
    ///     __typename
    ///     name
    ///     ... on Author {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.11.1.0")]
    public partial class BooksSubscriptionSubscription : global::MyApplicationMud.GraphQL.IBooksSubscriptionSubscription
    {
        private readonly global::StrawberryShake.IOperationExecutor<IBooksSubscriptionResult> _operationExecutor;
        public BooksSubscriptionSubscription(global::StrawberryShake.IOperationExecutor<IBooksSubscriptionResult> operationExecutor)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IBooksSubscriptionResult);
        public global::System.IObservable<global::StrawberryShake.IOperationResult<IBooksSubscriptionResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest();
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest()
        {
            return CreateRequest(null);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: BooksSubscriptionSubscriptionDocument.Instance.Hash.Value, name: "BooksSubscription", document: BooksSubscriptionSubscriptionDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest();
        }
    }
}
